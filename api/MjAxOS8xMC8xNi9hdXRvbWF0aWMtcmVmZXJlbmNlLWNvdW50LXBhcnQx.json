{"title":"[iOS] Automatic Reference Counting - Part1","date":"2019-10-16T06:12:26.000Z","link":"2019/10/16/automatic-reference-count-part1","comments":true,"tags":["iOS"],"updated":"2019-10-17T07:54:48.780Z","content":"<blockquote>\n<p>Swift uses Automatic Reference Counting (ARC) to track and<br>manage your app’s memory usage - Swift Programming Language</p>\n</blockquote>\n<p>Swift 使用 Automatic Reference Counting (= ARC) 來追蹤及管理 APP 記憶體使用情況<br>另外 ARC 只適用 Reference Type, 所以 Struct 、 Enum 不適用於 ARC</p>\n<br>\n\n<h1 id=\"ARC-如何運作？\">ARC 如何運作？<a href=\"2019/10/16/automatic-reference-count-part1#ARC-如何運作？\"></a></h1><figure class=\"highlight swift\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Dog</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> coat: <span class=\"type\">String</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">init</span>(coat: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.coat = coat</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">deinit</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"Dog deinit\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> dog1: <span class=\"type\">Dog?</span> = <span class=\"type\">Dog</span>(coat: <span class=\"string\">\"Yellow\"</span>)</span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-------------- Console log --------------</span><br></pre></td></tr></table></div></figure>\n\n<div align=\"left\"><img src=\"/2019/10/16/automatic-reference-count-part1/arc.png\" width=\"50%\"></div>\n\n<p>每當 Class 產生實體時, ARC 會配置一塊記憶體去儲存這實體相關資訊<br>並產生一個 Reference, 預設為 Strong Reference<br>而 ARC 會計算 Strong Reference 的個數, 即是 Reference Count<br>當 Reference Count 為 0 時, 記憶體才會釋放掉</p>\n<br>\n\n<p><strong>- - - - - - - - - - - - - -</strong></p>\n<figure class=\"highlight swift\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> dog2: <span class=\"type\">Dog?</span> = dog1</span><br><span class=\"line\"><span class=\"keyword\">var</span> dog3: <span class=\"type\">Dog?</span> = dog1</span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-------------- Console log --------------</span><br></pre></td></tr></table></div></figure>\n\n<div align=\"left\"><img src=\"/2019/10/16/automatic-reference-count-part1/arc1.png\" width=\"50%\"></div>\n\n<p>因為 class 是 Reference Type, 所以如果有 Copy 的動作<br>皆會建立 Reference 到同一個實體</p>\n<p>所以 Reference Count 會計數到 3</p>\n<br>\n\n<p><strong>- - - - - - - - - - - - - -</strong></p>\n<figure class=\"highlight swift\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dog1 = <span class=\"literal\">nil</span></span><br><span class=\"line\">dog2 = <span class=\"literal\">nil</span></span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-------------- Console log --------------</span><br></pre></td></tr></table></div></figure>\n\n<div align=\"left\"><img src=\"/2019/10/16/automatic-reference-count-part1/arc2.png\" width=\"50%\"></div>\n\n<p>Reference Count 減到 1, 目前記憶體還不會被釋放</p>\n<br>\n\n<p><strong>- - - - - - - - - - - - - -</strong></p>\n<figure class=\"highlight swift\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dog3 = <span class=\"literal\">nil</span></span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-------------- Console log --------------</span><br><span class=\"line\">Dog deinit</span><br></pre></td></tr></table></div></figure>\n\n<div align=\"left\"><img src=\"/2019/10/16/automatic-reference-count-part1/arc3.png\" width=\"50%\"></div>\n\n<p>當 Reference Count 為 0, 記憶體被釋放掉</p>\n<p><strong>- - - - - - - - - - - - - -</strong></p>\n<h1 id=\"Retain-Cycle\">Retain Cycle<a href=\"2019/10/16/automatic-reference-count-part1#Retain-Cycle\"></a></h1><p>當兩實體互相建立 Reference 時, 會造成所謂 Retain Cycle<br>這種情形會造成記憶體無法釋放掉, 我們稱為 Memory Leak</p>\n<figure class=\"highlight swift\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Pet</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> coat: <span class=\"type\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> petHouse: <span class=\"type\">PetHouse?</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">init</span>(coat: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.coat = coat</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">deinit</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"Dog deinit\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PetHouse</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> size: <span class=\"type\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> pet: <span class=\"type\">Pet?</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">init</span>(size: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.size = size</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">deinit</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"PetHouse deinit\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> pet: <span class=\"type\">Pet?</span> = <span class=\"type\">Pet</span>(coat: <span class=\"string\">\"Yellow\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> petHouse = <span class=\"type\">PetHouse</span>(size: <span class=\"string\">\"Large\"</span>)</span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-------------- Console log --------------</span><br></pre></td></tr></table></div></figure>\n\n<div align=\"left\"><img src=\"/2019/10/16/automatic-reference-count-part1/arc4.png\" width=\"50%\"></div>\n\n<p>兩實體建立, Reference Count 各為 1</p>\n<br>\n\n<p><strong>- - - - - - - - - - - - - -</strong></p>\n<figure class=\"highlight swift\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pet?.petHouse = petHouse</span><br><span class=\"line\">petHouse.pet = pet</span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-------------- Console log --------------</span><br></pre></td></tr></table></div></figure>\n\n<div align=\"left\"><img src=\"/2019/10/16/automatic-reference-count-part1/arc5.png\" width=\"50%\"></div>\n\n<p>兩實體互相建立 Strong Reference, 兩實體 Referenct Count 變為 2</p>\n<br>\n\n<p><strong>- - - - - - - - - - - - - -</strong></p>\n<figure class=\"highlight swift\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pet = <span class=\"literal\">nil</span></span><br><span class=\"line\">petHouse = <span class=\"literal\">nil</span></span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-------------- Console log --------------</span><br></pre></td></tr></table></div></figure>\n\n<div align=\"left\"><img src=\"/2019/10/16/automatic-reference-count-part1/arc6.png\" width=\"50%\"></div>\n\n<p>當兩變數變為 nil 時, Referenct Count 各變為 1<br>兩實體還是相互 Reference, 產生 Retain Cycle<br>記憶體沒釋放掉, 造成 Memory Leak</p>\n<br>\n\n\n<p>下一 Part 會介紹如何解決 Retain Cycle 的問題</p>\n","next":{"title":"[iOS] Grand Central Dispatch - Part 1","link":"2019/09/20/grand-central-dispatch-part1"},"plink":"http://yoursite.com/2019/10/16/automatic-reference-count-part1/","toc":[{"title":"ARC 如何運作？","id":"ARC-如何運作？","index":"1"},{"title":"Retain Cycle","id":"Retain-Cycle","index":"2"}]}