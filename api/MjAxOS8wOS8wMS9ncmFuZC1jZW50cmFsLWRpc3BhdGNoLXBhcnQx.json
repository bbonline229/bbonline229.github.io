{"title":"[iOS] Grand Central Dispatch - Part 1","date":"2019-09-01T02:45:24.000Z","link":"2019/09/01/grand-central-dispatch-part1","comments":true,"tags":["iOS"],"updated":"2019-09-26T13:08:34.323Z","content":"<p>主管 : 搞什麼, APP 為什麼用起來卡卡的？<br>菜鳥 : 我剛在首頁寫了下載圖片的功能<br>主管 : 那你有在背景下載嗎？ GCD 不是可以把長時間的工作丟到背景<br>菜鳥 : 你是說最大公因數(GCD) 嗎？ 我小時候是數學天才<br>主管 : ………..<br>菜鳥 : 我把他丟到背景去下載了, 但為啥圖片下載完了顯示不出來<br>主管 : 圖片下載完, 更新 UI 要在 Main Thread 啦<br>菜鳥 : 天阿 ~ 寫 APP 好難 QQ</p>\n<br>\n\n<p>日常開發 iOS APP, 會遇到需要使用 <code>GCD</code> 的時機很多<br>最常應用的時機應該是網路請求吧<br><code>GCD</code> 對一個初學者來說, 真是個超級大魔王阿<br>這幾篇文章就來簡單介紹一下 <code>GCD</code> 的一些基礎觀念</p>\n<p><strong>- - - - - - - - -</strong></p>\n<h1 id=\"什麼是-GCD\">什麼是 GCD ?<a href=\"2019/09/01/grand-central-dispatch-part1#什麼是-GCD\"></a></h1><p>簡單來說 <code>GCD</code> 整個精髓就是可以讓我們同一時間能做很多任務 (Task), 我們稱之為 <code>Concurrency</code><br>GCD 也讓開發者不用跟底層技術打交道, 例如我們不用知道怎麼操作 Thread<br>當我們提交任務時, <code>Thread pool</code> 去選適當的 <code>Thread</code></p>\n<p><code>GCD</code> 是 Apple 提供的一套 Library</p>\n<p><mark> 開發者主要做的事： Create a queue, submit a task </mark></p>\n<h2 id=\"Task\">Task<a href=\"2019/09/01/grand-central-dispatch-part1#Task\"></a></h2><p>我們會提交一些任務 (Task), 任務大概組成可以是 <code>WorkItem</code> 或是 <code>Closure</code></p>\n<li>WorkItem</li>\n\n<figure class=\"highlight swift\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">DispatchWorkItem</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"I'm work item\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<li>Closure</li>\n\n<figure class=\"highlight swift\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"I'm closure\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"Thread\">Thread<a href=\"2019/09/01/grand-central-dispatch-part1#Thread\"></a></h2><p>上面講的 <code>Task</code> 會在 <code>Thread</code> 被執行<br>而 Thread 是由系統的 <code>Thread Pool</code> 負責管理<br>另外更新 UI 要在 <code>Main Thread</code></p>\n<h2 id=\"Queue\">Queue<a href=\"2019/09/01/grand-central-dispatch-part1#Queue\"></a></h2><p>FIFO</p>\n<h2 id=\"Dispatch-Queue\">Dispatch Queue<a href=\"2019/09/01/grand-central-dispatch-part1#Dispatch-Queue\"></a></h2><p>主要用於調度及提交任務<br>分為兩種 dispatch queue, <code>serial queue</code> 及 <code>concurrent queue</code><br><mark>兩者共同處是皆符合 <code>FIFO</code> 的特性</mark></p>\n<ul>\n<li>Serial Queue</li>\n</ul>\n<p>一次只執行一個 Task, <mark><strong>會等到前一個 Task 執行完才會執行下一個</strong></mark></p>\n<p>因為 Serial 的特性, 確保一次只執行一個 Task, 所以系統只需要提供一個 Thread 即可</p>\n<ul>\n<li>Concurrent Queue</li>\n</ul>\n<p>與 Serial Queue 不同處, Task 不會等前一個執行完就<br>且先執行不一定會先執行完<br>因為時間差很短, 所以看起來會有同時派出任務的假象<br>需要因應多個 Task, 所以系統會提供多個 Thread</p>\n<p>白話解釋 <code>Serial Queue</code> 及 <code>Concurrent Queue</code><br>超商排隊人潮 (Queue), 結帳櫃檯 (Thread)<br>客人結帳 (Task)</p>\n<p>Serial Queue<br>如果只有一個結帳櫃檯, 須排隊等前一個客人結帳完才換下一位客人</p>\n<p>Concurrent Queue<br>超商有10個結帳櫃檯, 客人依序排隊之後到空的結帳櫃檯結帳</p>\n<h2 id=\"創建-Dispatch-Queue\">創建 Dispatch Queue<a href=\"2019/09/01/grand-central-dispatch-part1#創建-Dispatch-Queue\"></a></h2><p>系統提供 Dispatch Queue</p>\n<ul>\n<li>Main Queue (Serial Queue)</li>\n<li>Global Queue (Concurrent Queue)<ul>\n<li>userInteractive</li>\n<li>userInitiated</li>\n<li>utility</li>\n<li>background</li>\n<li>default</li>\n<li>unspecified</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight swift\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">DispatchQueue</span>.main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">DispatchQueue</span>.global(qos: .userInteractive)</span><br><span class=\"line\"><span class=\"type\">DispatchQueue</span>.global(qos: .userInitiated)</span><br><span class=\"line\"><span class=\"type\">DispatchQueue</span>.global(qos: .utility)</span><br><span class=\"line\"><span class=\"type\">DispatchQueue</span>.global(qos: .background)</span><br><span class=\"line\"><span class=\"type\">DispatchQueue</span>.global(qos: .<span class=\"keyword\">default</span>)</span><br><span class=\"line\"><span class=\"type\">DispatchQueue</span>.global(qos: .unspecified)</span><br></pre></td></tr></table></div></figure>\n\n<p>Custom Dispatch Queue<br>預設是 Serial Queue</p>\n<figure class=\"highlight swift\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">DispatchQueue</span>(label: <span class=\"string\">\"serial\"</span>)</span><br><span class=\"line\"><span class=\"type\">DispatchQueue</span>(label: <span class=\"string\">\"concurrent\"</span>, attributes: .concurrent)</span><br><span class=\"line\"><span class=\"type\">DispatchQueue</span>(label: <span class=\"string\">\"concurrent\"</span>, qos: .background, attributes: .concurrent)</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"Sync-amp-Async\">Sync &amp; Async<a href=\"2019/09/01/grand-central-dispatch-part1#Sync-amp-Async\"></a></h2><li> Synchronous </li>\n\n<blockquote>\n<p>When a work item is executed synchronously with the sync<br>method, the program waits until execution finishes</p>\n</blockquote>\n<p>阻塞 (block) 當前所在 Queue, 直到 Task 執行完畢</p>\n<li> Asynchronous </li>\n\n<blockquote>\n<p>When a work item is executed asynchronously with the async<br>method, the method call returns immediately</p>\n</blockquote>\n<p>不會阻塞 (block) 當前所在 Queue</p>\n<p>白話</p>\n<p>Sync - 去 7-11 買咖啡, 店員等咖啡沖好交給你才能幫下一位客人結帳<br>Async - 去 7-11 買咖啡, 店員在等啡啡沖好的這段時機點, 可以幫下一位客人結帳</p>\n<p>Serial Queue - Synchronous<br>Serial Queue - Asynchronous</p>\n<p>Concurrent Queue - Synchronous<br>Concurrent Queue - Asynchronous</p>\n","prev":{"title":"[iOS] Grand Central Dispatch - Part 2","link":"2019/09/05/grand-central-dispatch-part2"},"next":{"title":"[iOS] RxSwift 簡易筆記","link":"2019/07/16/rxswift"},"plink":"http://yoursite.com/2019/09/01/grand-central-dispatch-part1/","toc":[{"title":"什麼是 GCD ?","id":"什麼是-GCD","index":"1","children":[{"title":"Task","id":"Task","index":"1.1"},{"title":"Thread","id":"Thread","index":"1.2"},{"title":"Queue","id":"Queue","index":"1.3"},{"title":"Dispatch Queue","id":"Dispatch-Queue","index":"1.4"},{"title":"創建 Dispatch Queue","id":"創建-Dispatch-Queue","index":"1.5"},{"title":"Sync &amp; Async","id":"Sync-amp-Async","index":"1.6"}]}]}