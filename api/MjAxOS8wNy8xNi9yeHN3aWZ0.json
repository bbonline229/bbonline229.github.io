{"title":"[iOS] RxSwift 簡易筆記","date":"2019-07-16T15:20:47.000Z","link":"2019/07/16/rxswift","updated":"2019-09-25T04:36:50.338Z","content":"<h1 id=\"RxSwift-Rx-ReactiveX\"><u>RxSwift (Rx = ReactiveX)</u><a href=\"2019/07/16/rxswift#RxSwift-Rx-ReactiveX\"></a></h1><p><a href=\"https://github.com/ReactiveX/RxSwift\" target=\"_blank\" rel=\"noopener\">RxSwift 文件</a></p>\n<h2 id=\"什麼是-RxSwift\">什麼是 RxSwift ?<a href=\"2019/07/16/rxswift#什麼是-RxSwift\"></a></h2><p>…<br>…<br>…<br>…<br>…<br>…<br>…<br>…</p>\n<br>\n\n<h1 id=\"Observable-Heart-of-Rx\"><u>Observable (Heart of Rx)</u><a href=\"2019/07/16/rxswift#Observable-Heart-of-Rx\"></a></h1><h2 id=\"什麼是-Observable\">什麼是 Observable?<a href=\"2019/07/16/rxswift#什麼是-Observable\"></a></h2><p>Observable 是個可被觀察的序列(sequence)</p>\n<p><code>Observable&lt;Double&gt;</code> 溫度序列<br>32.0 → 28.0 → 30.0 → 30.5 → 32.5 —-&gt; Time</p>\n<p><code>Observable&lt;Int&gt;</code> 分數序列<br>80 → 95 → 100 → 70 → 90 → 95 —-&gt; Time</p>\n<h2 id=\"Event\">Event<a href=\"2019/07/16/rxswift#Event\"></a></h2><p>onNext(element) 新的事件<br>onCompleted() 中止事件, 完成<br>onError(error) 中止事件, Error</p>\n<h2 id=\"Create-Observable\">Create Observable<a href=\"2019/07/16/rxswift#Create-Observable\"></a></h2><ul>\n<li><p>基本創建 Observable 方式</p>\n<figure class=\"highlight swift\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> one = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> two = <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> three = <span class=\"number\">3</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">let</span> observable = <span class=\"type\">Observable</span>.just(one)</span><br><span class=\"line\"><span class=\"keyword\">let</span> observable2 = <span class=\"type\">Observable</span>.of(one, two, three)</span><br><span class=\"line\"><span class=\"keyword\">let</span> observable3 = <span class=\"type\">Observable</span>.of([one, two, three])</span><br><span class=\"line\"><span class=\"keyword\">let</span> observable4 = <span class=\"type\">Observable</span>.from([one, two, three])</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>使用 block 產生 observable 方式</p>\n</li>\n</ul>\n<figure class=\"highlight swift\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Observable</span>&lt;<span class=\"type\">String</span>&gt;.create &#123; observer <span class=\"keyword\">in</span></span><br><span class=\"line\">  observer.onNext(<span class=\"string\">\"1\"</span>)</span><br><span class=\"line\">  observer.onNext(<span class=\"string\">\"2\"</span>)</span><br><span class=\"line\">  observer.onCompleted()</span><br><span class=\"line\">  observer.onNext(<span class=\"string\">\"?\"</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"type\">Disposables</span>.create()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h1 id=\"SubScribe-響應-observable\"><u>SubScribe (響應 observable)</u><a href=\"2019/07/16/rxswift#SubScribe-響應-observable\"></a></h1><p>(類似 add observer)</p>\n<ul>\n<li>Observable 沒有訂閱前, 不會發送任何 Event</li>\n</ul>\n<figure class=\"highlight swift\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> one = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> two = <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> three = <span class=\"number\">3</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">let</span> observable = <span class=\"type\">Observable</span>.of(one, two, three)</span><br><span class=\"line\">    </span><br><span class=\"line\">observable.subscribe(onNext: &#123; element <span class=\"keyword\">in</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(element)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//-----Console log -------</span></span><br><span class=\"line\"><span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"number\">3</span></span><br></pre></td></tr></table></div></figure>\n\n<figure class=\"highlight swift\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Observable</span>&lt;<span class=\"type\">String</span>&gt;.create &#123; observer <span class=\"keyword\">in</span></span><br><span class=\"line\">    observer.onNext(<span class=\"string\">\"1\"</span>)</span><br><span class=\"line\">    observer.onNext(<span class=\"string\">\"2\"</span>)</span><br><span class=\"line\">    observer.onNext(<span class=\"string\">\"3\"</span>)</span><br><span class=\"line\">    observer.onCompleted()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"type\">Disposables</span>.create()</span><br><span class=\"line\">&#125;.subscribe(</span><br><span class=\"line\">    onNext: &#123; <span class=\"built_in\">print</span>($<span class=\"number\">0</span>) &#125;,</span><br><span class=\"line\">    onError: &#123; <span class=\"built_in\">print</span>($<span class=\"number\">0</span>) &#125;,</span><br><span class=\"line\">    onCompleted: &#123; <span class=\"built_in\">print</span>(<span class=\"string\">\"Completed\"</span>) &#125;,</span><br><span class=\"line\">    onDisposed: &#123; <span class=\"built_in\">print</span>(<span class=\"string\">\"Disposed\"</span>) &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//-----Console log -------</span></span><br><span class=\"line\"><span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"type\">Completed</span></span><br><span class=\"line\"><span class=\"type\">Disposed</span></span><br></pre></td></tr></table></div></figure>\n\n<br>\n\n<p>被動 terminate: emit .error &amp; .completed<br>主動 terminate: dispose</p>\n<h2 id=\"Disposebag\">Disposebag<a href=\"2019/07/16/rxswift#Disposebag\"></a></h2><ul>\n<li>釋放資源用</li>\n</ul>\n<figure class=\"highlight swift\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> disposeBag = <span class=\"type\">DisposeBag</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">Observable</span>&lt;<span class=\"type\">String</span>&gt;.create &#123; observer <span class=\"keyword\">in</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    observer.onNext(<span class=\"string\">\"1\"</span>)</span><br><span class=\"line\">    observer.onNext(<span class=\"string\">\"2\"</span>)</span><br><span class=\"line\">    observer.onNext(<span class=\"string\">\"3\"</span>)</span><br><span class=\"line\">    observer.onCompleted()</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"type\">Disposables</span>.create()</span><br><span class=\"line\">    &#125;.subscribe(</span><br><span class=\"line\">    onNext: &#123; <span class=\"built_in\">print</span>($<span class=\"number\">0</span>) &#125;,</span><br><span class=\"line\">    onError: &#123; <span class=\"built_in\">print</span>($<span class=\"number\">0</span>) &#125;,</span><br><span class=\"line\">    onCompleted: &#123; <span class=\"built_in\">print</span>(<span class=\"string\">\"Completed\"</span>) &#125;,</span><br><span class=\"line\">    onDisposed: &#123; <span class=\"built_in\">print</span>(<span class=\"string\">\"Disposed\"</span>) &#125;</span><br><span class=\"line\">).disposed(by: disposeBag)</span><br></pre></td></tr></table></div></figure>\n\n<br>\n\n<h1 id=\"Subject\"><u>Subject</u><a href=\"2019/07/16/rxswift#Subject\"></a></h1><p><strong>可以是 Observable Sequence 也可以是 Observer</strong></p>\n<h2 id=\"Publish-Subject-v-s-Behavior-Subject-v-s-Replay-Subject\"><mark>Publish Subject v.s. Behavior Subject v.s. Replay Subject</mark><a href=\"2019/07/16/rxswift#Publish-Subject-v-s-Behavior-Subject-v-s-Replay-Subject\"></a></h2><br>\n\n<h2 id=\"Publish-Subject\">Publish Subject<a href=\"2019/07/16/rxswift#Publish-Subject\"></a></h2><blockquote>\n<p>初始化時不包含任何元素，只會在訂閱後接收到元素,<br>類似訂閱報紙的概念, 沒訂閱就收不到資訊</p>\n</blockquote>\n<p><img src=\"/2019/07/16/rxswift/image2.png\" alt=\"image2\" class=\"article-img\"></p>\n<p><img src=\"/2019/07/16/rxswift/image1.png\" alt=\"image1\" class=\"article-img\"><br><br></p>\n<h2 id=\"Behavior-Subject\">Behavior Subject<a href=\"2019/07/16/rxswift#Behavior-Subject\"></a></h2><blockquote>\n<p>創建 Behavior Subject 時需要包含初始值, 進行訂閱時, 只會接收最新的元素, 如果沒有最新的元素, 就接收初始值</p>\n</blockquote>\n<p><img src=\"/2019/07/16/rxswift/image4.png\" alt=\"image4\" class=\"article-img\"></p>\n<p><img src=\"/2019/07/16/rxswift/image3.png\" alt=\"image3\" class=\"article-img\"><br><br></p>\n<h2 id=\"Replay-Subject\">Replay Subject<a href=\"2019/07/16/rxswift#Replay-Subject\"></a></h2><blockquote>\n<p>創建 ReplaySubject 時需要指定緩衝容量, 進行訂閱時, 會先接收緩衝區的元素</p>\n</blockquote>\n<p><img src=\"/2019/07/16/rxswift/image6.png\" alt=\"image6\" class=\"article-img\"></p>\n<p><img src=\"/2019/07/16/rxswift/image5.png\" alt=\"image5\" class=\"article-img\"></p>\n<br>\n\n<h1 id=\"Operator\"><u>Operator</u><a href=\"2019/07/16/rxswift#Operator\"></a></h1><p><a href=\"https://rxmarbles.com/#combineLatest\" target=\"_blank\" rel=\"noopener\">Marble Diagram</a><br><a href=\"https://apps.apple.com/us/app/rxmarbles/id1087272442\" target=\"_blank\" rel=\"noopener\">iOS App Marble Diagram</a></p>\n<h2 id=\"Filter-Operator\">Filter Operator<a href=\"2019/07/16/rxswift#Filter-Operator\"></a></h2><ul>\n<li>ignoreElement</li>\n<li>elementAt(n)</li>\n<li>filter</li>\n<li>skip(n)</li>\n<li>skipwhile</li>\n<li>skipUntil</li>\n<li>take(n)</li>\n<li>takewhile</li>\n<li>takeUntil</li>\n</ul>\n<h2 id=\"Transform-Operator\">Transform Operator<a href=\"2019/07/16/rxswift#Transform-Operator\"></a></h2><ul>\n<li>toArray</li>\n<li>map</li>\n<li>flatmap</li>\n</ul>\n<h2 id=\"Combine-Operator\">Combine Operator<a href=\"2019/07/16/rxswift#Combine-Operator\"></a></h2><ul>\n<li>startwith(n)</li>\n<li>concat</li>\n<li>merge</li>\n<li>combine latest</li>\n<li>scan</li>\n</ul>\n<br>\n\n<h1 id=\"Throttle-v-s-Debounce\"><u>Throttle v.s. Debounce</u><a href=\"2019/07/16/rxswift#Throttle-v-s-Debounce\"></a></h1><ul>\n<li>以 Button 為例</li>\n</ul>\n<p><strong>Throttle</strong></p>\n<figure class=\"highlight swift\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">throttleBtn.rx.tap.throttle(.seconds(<span class=\"number\">3</span>), scheduler: <span class=\"type\">MainScheduler</span>.instance).subscribe(onNext: &#123; (touch) <span class=\"keyword\">in</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Throttle tap !!!\"</span>)</span><br><span class=\"line\">&#125;).disposed(by: disposeBag)</span><br></pre></td></tr></table></div></figure>\n\n<blockquote>\n<p>3 秒內, 只會響應第一跟最新的 Event</p>\n</blockquote>\n<p><strong>Debounce</strong></p>\n<figure class=\"highlight swift\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">debounceBtn.rx.tap.debounce(.seconds(<span class=\"number\">3</span>), scheduler: <span class=\"type\">MainScheduler</span>.instance).subscribe(onNext: &#123; (touch) <span class=\"keyword\">in</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Debounce tap !!!\"</span>)</span><br><span class=\"line\">&#125;).disposed(by: disposeBag)</span><br></pre></td></tr></table></div></figure>\n\n<blockquote>\n<p>當按鈕觸發之後, 過 3 秒沒有再觸發, 才會響應 Event</p>\n</blockquote>\n","prev":{"title":"[iOS] Grand Central Dispatch - Part 1","link":"2019/09/01/grand-central-dispatch-part1"},"next":{"title":"[Swift] Closure in Swift 5 - Part 3 (Escape Closure)","link":"2019/05/23/closure3"},"plink":"http://yoursite.com/2019/07/16/rxswift/","toc":[{"title":"<u>RxSwift (Rx = ReactiveX)</u>","id":"RxSwift-Rx-ReactiveX","index":"1","children":[{"title":"什麼是 RxSwift ?","id":"什麼是-RxSwift","index":"1.1"}]},{"title":"<u>Observable (Heart of Rx)</u>","id":"Observable-Heart-of-Rx","index":"2","children":[{"title":"什麼是 Observable?","id":"什麼是-Observable","index":"2.1"},{"title":"Event","id":"Event","index":"2.2"},{"title":"Create Observable","id":"Create-Observable","index":"2.3"}]},{"title":"<u>SubScribe (響應 observable)</u>","id":"SubScribe-響應-observable","index":"3","children":[{"title":"Disposebag","id":"Disposebag","index":"3.1"}]},{"title":"<u>Subject</u>","id":"Subject","index":"4","children":[{"title":"<mark>Publish Subject v.s. Behavior Subject v.s. Replay Subject</mark>","id":"Publish-Subject-v-s-Behavior-Subject-v-s-Replay-Subject","index":"4.1"},{"title":"Publish Subject","id":"Publish-Subject","index":"4.2"},{"title":"Behavior Subject","id":"Behavior-Subject","index":"4.3"},{"title":"Replay Subject","id":"Replay-Subject","index":"4.4"}]},{"title":"<u>Operator</u>","id":"Operator","index":"5","children":[{"title":"Filter Operator","id":"Filter-Operator","index":"5.1"},{"title":"Transform Operator","id":"Transform-Operator","index":"5.2"},{"title":"Combine Operator","id":"Combine-Operator","index":"5.3"}]},{"title":"<u>Throttle v.s. Debounce</u>","id":"Throttle-v-s-Debounce","index":"6"}]}